{
  "metadata": {
    "total_cells": 12,
    "notebook_path": "TDS_Automation_V2.ipynb",
    "last_scan": "2025-08-14T09:53:12.410611",
    "version": "3.0",
    "repository": "rjshvjy/tds-automation",
    "type": "widget_based",
    "flow_type": "branching",
    "commit_hash": "b05fefe1d25f031c00292112a17cc7a4f0fca9b6"
  },
  "cells": {
    "cell_1": {
      "index": 1,
      "title": "Install required libraries and import modules",
      "status": "unknown",
      "imports": [
        "import PyPDF2",
        "import pandas as pd",
        "import numpy as np",
        "import re",
        "import os",
        "from datetime import datetime",
        "import openpyxl",
        "from openpyxl import load_workbook",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.styles import Font, Alignment, Border, Side",
        "import warnings"
      ],
      "defines": {
        "functions": [],
        "classes": []
      },
      "calls": [
        "filterwarnings",
        "print"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [],
      "mapping_related": false
    },
    "cell_2": {
      "index": 2,
      "title": "Functions to extract data from PDF challans - FIXED AMOUNT EXTRACTION",
      "status": "unknown",
      "imports": [],
      "defines": {
        "functions": [
          "extract_challan_data_from_pdf",
          "extract_all_challans",
          "test_extraction"
        ],
        "classes": []
      },
      "calls": [
        "basename",
        "join",
        "float",
        "search",
        "replace",
        "sorted",
        "extract_challan_data_from_pdf",
        "append",
        "extract_all_challans",
        "open",
        "str",
        "print",
        "len",
        "extract_text",
        "lower",
        "listdir",
        "endswith",
        "get",
        "group",
        "zfill",
        "upper",
        "test_extraction",
        "PdfReader",
        "items",
        "strip"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains leading_zeros pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true
    },
    "cell_3": {
      "index": 3,
      "title": "Functions to read and update Excel files - FIXED WITH PROPER COLUMN CODES AND TDS PRESERVATION",
      "status": "unknown",
      "imports": [
        "import math",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import traceback",
        "import traceback",
        "import traceback"
      ],
      "defines": {
        "functions": [
          "read_tds_masters",
          "update_tds_masters_with_challans",
          "validate_tds_totals"
        ],
        "classes": []
      },
      "calls": [
        "to_numeric",
        "min",
        "to_datetime",
        "apply",
        "search",
        "read_tds_masters",
        "cell",
        "astype",
        "enumerate",
        "replace",
        "sorted",
        "any",
        "validate_tds_totals",
        "set",
        "read_excel",
        "close",
        "append",
        "Decimal",
        "range",
        "print_exc",
        "int",
        "iter_rows",
        "load_workbook",
        "str",
        "abs",
        "startswith",
        "iterrows",
        "print",
        "lower",
        "len",
        "update_tds_masters_with_challans",
        "get",
        "group",
        "match",
        "quantize",
        "save",
        "notna",
        "items",
        "strptime",
        "DataFrame",
        "list",
        "keys",
        "strip"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(421)",
        "(425D)",
        "(425E)",
        "(425F)",
        "(427)"
      ]
    },
    "cell_4": {
      "index": 4,
      "title": "TDS_Masters Template Generator",
      "status": "unknown",
      "imports": [
        "import openpyxl",
        "from openpyxl import Workbook",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.worksheet.datavalidation import DataValidation",
        "import pandas as pd",
        "from datetime import datetime",
        "import ipywidgets as widgets",
        "from IPython.display import display",
        "from google.colab import files"
      ],
      "defines": {
        "functions": [
          "generate_tds_masters_template",
          "create_template_download_widget"
        ],
        "classes": [
          "TDSMastersTemplateGenerator"
        ]
      },
      "calls": [
        "create_template_download_widget",
        "__init__",
        "cell",
        "enumerate",
        "add",
        "create_template",
        "get_column_letter",
        "range",
        "PatternFill",
        "merge_cells",
        "Button",
        "VBox",
        "_setup_tds_codes_sheet",
        "Workbook",
        "DataValidation",
        "Font",
        "_setup_challan_details_sheet",
        "Comment",
        "Layout",
        "on_click",
        "_setup_tds_rates_sheet",
        "print",
        "save_template",
        "HTML",
        "_setup_deductor_input_sheet",
        "now",
        "date",
        "details",
        "_setup_tds_parties_sheet",
        "save",
        "Alignment",
        "download_template",
        "items",
        "download",
        "create_sheet",
        "TDSMastersTemplateGenerator",
        "add_data_validation",
        "generate_tds_masters_template"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains leading_zeros pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern"
      ],
      "mapping_related": false,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(420)",
        "(421)",
        "(425D)",
        "(425E)",
        "(425F)",
        "(427)"
      ]
    },
    "cell_5": {
      "index": 5,
      "title": "Government Template Builder and Enhanced Output Generator",
      "status": "unknown",
      "imports": [
        "import openpyxl",
        "from openpyxl import Workbook",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill",
        "from openpyxl.utils import get_column_letter",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import pandas as pd",
        "from datetime import datetime",
        "import math"
      ],
      "defines": {
        "functions": [
          "generate_output_file_enhanced",
          "test_template_generation"
        ],
        "classes": [
          "GovernmentTemplateBuilder"
        ]
      },
      "calls": [
        "__init__",
        "to_datetime",
        "float",
        "cell",
        "read_tds_masters",
        "enumerate",
        "_fill_deductor_details",
        "replace",
        "GovernmentTemplateBuilder",
        "create_template",
        "_fill_deductee_breakup",
        "append",
        "get_column_letter",
        "generate_output_file_enhanced",
        "if",
        "int",
        "extract_all_challans",
        "Workbook",
        "ceil",
        "Font",
        "str",
        "iterrows",
        "fill_template",
        "print",
        "len",
        "_setup_deductor_sheet",
        "isinstance",
        "get",
        "_setup_deductee_sheet",
        "test_template_generation",
        "save",
        "notna",
        "upper",
        "Alignment",
        "dropna",
        "strptime",
        "_setup_challan_sheet",
        "create_sheet",
        "_fill_challan_details",
        "strip"
      ],
      "dependencies": {
        "backward": [
          "cell_3",
          "cell_2"
        ],
        "forward": [
          "cell_8"
        ]
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(420)",
        "(421)",
        "(425D)",
        "(425E)",
        "(425F)",
        "(427)"
      ]
    },
    "cell_6": {
      "index": 6,
      "title": "Validation Engine with Reconciliation Report Support",
      "status": "unknown",
      "imports": [
        "import re",
        "import pandas as pd",
        "import openpyxl",
        "from openpyxl import load_workbook",
        "from datetime import datetime",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import numpy as np"
      ],
      "defines": {
        "functions": [
          "test_validation"
        ],
        "classes": [
          "ValidationEngine"
        ]
      },
      "calls": [
        "to_string",
        "__init__",
        "float",
        "_validate_pincode",
        "enumerate",
        "replace",
        "validate_all",
        "sorted",
        "set",
        "append",
        "Decimal",
        "_validate_yes_no",
        "title",
        "test_validation",
        "get_validation_dataframe",
        "_validate_pan",
        "load_workbook",
        "strftime",
        "_generate_summary",
        "validator",
        "str",
        "abs",
        "sum",
        "iterrows",
        "_validate_tan",
        "print",
        "_validate_mandatory_fields",
        "ValidationEngine",
        "now",
        "_validate_email",
        "len",
        "ExcelWriter",
        "values",
        "export_validation_report",
        "_reconcile_amounts",
        "get",
        "match",
        "to_excel",
        "_validate_quarter",
        "_validate_deductor_type",
        "quantize",
        "notna",
        "upper",
        "_load_deductor_details",
        "_validate_formats",
        "items",
        "_generate_suggestions",
        "DataFrame",
        "list",
        "keys",
        "strip"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415A)",
        "(416)",
        "(417)",
        "(421)"
      ]
    },
    "cell_7": {
      "index": 7,
      "title": "Reconciliation Report Generator",
      "status": "unknown",
      "imports": [
        "import pandas as pd",
        "import openpyxl",
        "from openpyxl import Workbook",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.formatting.rule import CellIsRule",
        "from openpyxl.styles.differential import DifferentialStyle",
        "from datetime import datetime",
        "import numpy as np"
      ],
      "defines": {
        "functions": [
          "test_reconciliation_report"
        ],
        "classes": [
          "ReconciliationReport"
        ]
      },
      "calls": [
        "__init__",
        "_print_report_summary",
        "cell",
        "_create_summary_sheet",
        "enumerate",
        "_create_data_corrections_sheet",
        "append",
        "title",
        "PatternFill",
        "range",
        "merge_cells",
        "_get_format_suggestion",
        "Workbook",
        "strftime",
        "Font",
        "test_reconciliation_report",
        "abs",
        "else",
        "sum",
        "print",
        "now",
        "len",
        "remove",
        "values",
        "Side",
        "get",
        "generate_report",
        "ReconciliationReport",
        "_create_challan_matching_sheet",
        "save",
        "Alignment",
        "items",
        "create_sheet",
        "_create_validation_errors_sheet",
        "Border",
        "_create_mandatory_fields_sheet"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains date_format pattern",
        "Contains rate_conversion pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(416)",
        "(417)"
      ]
    },
    "cell_8": {
      "index": 8,
      "title": "Enhanced Main Processing Pipeline",
      "status": "unknown",
      "imports": [
        "import os",
        "import math",
        "import pandas as pd",
        "import numpy as np",
        "from datetime import datetime",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import openpyxl",
        "from openpyxl import load_workbook, Workbook",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill"
      ],
      "defines": {
        "functions": [
          "get_output_filename_from_masters",
          "fill_government_template",
          "_fill_deductor_details",
          "_fill_challan_details",
          "_fill_deductee_breakup",
          "process_tds_returns_enhanced",
          "process_tds_returns"
        ],
        "classes": []
      },
      "calls": [
        "join",
        "to_datetime",
        "float",
        "cell",
        "read_tds_masters",
        "_fill_deductor_details",
        "enumerate",
        "replace",
        "process_tds_returns_enhanced",
        "fill_government_template",
        "validate_all",
        "GovernmentTemplateBuilder",
        "create_template",
        "validate_tds_totals",
        "_fill_deductee_breakup",
        "Decimal",
        "range",
        "get_output_filename_from_masters",
        "int",
        "extract_all_challans",
        "to_pydatetime",
        "Workbook",
        "strftime",
        "Font",
        "str",
        "dirname",
        "iterrows",
        "fill_template",
        "print",
        "ValidationEngine",
        "now",
        "len",
        "remove",
        "process_tds_returns",
        "update_tds_masters_with_challans",
        "get",
        "isinstance",
        "generate_report",
        "ReconciliationReport",
        "quantize",
        "save",
        "dropna",
        "notna",
        "strptime",
        "create_sheet",
        "_fill_challan_details",
        "strip"
      ],
      "dependencies": {
        "backward": [
          "cell_2",
          "cell_6",
          "cell_7",
          "cell_3",
          "cell_5"
        ],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(420)",
        "(421)",
        "(425D)",
        "(427)"
      ]
    },
    "cell_9": {
      "index": 9,
      "title": "Modified Interactive Interface - 2-File Upload System",
      "status": "unknown",
      "imports": [
        "import os",
        "import zipfile",
        "import shutil",
        "from google.colab import files",
        "import pandas as pd",
        "from datetime import datetime",
        "import time",
        "import traceback"
      ],
      "defines": {
        "functions": [
          "clear_uploads",
          "upload_zip_file",
          "process_uploaded_files",
          "start_interactive_upload",
          "download_tds_masters_template"
        ],
        "classes": []
      },
      "calls": [
        "basename",
        "join",
        "start_interactive_upload",
        "process_tds_returns_enhanced",
        "create_template",
        "rmtree",
        "format",
        "append",
        "extract_challan_data_from_pdf",
        "move",
        "print_exc",
        "process_uploaded_files",
        "open",
        "walk",
        "upload_zip_file",
        "makedirs",
        "startswith",
        "print",
        "upload",
        "lower",
        "remove",
        "len",
        "endswith",
        "get",
        "extractall",
        "save",
        "clear_uploads",
        "exists",
        "download_tds_masters_template",
        "items",
        "ZipFile",
        "download",
        "TDSMastersTemplateGenerator",
        "write"
      ],
      "dependencies": {
        "backward": [
          "cell_4",
          "cell_2",
          "cell_8"
        ],
        "forward": []
      },
      "issues": [
        "Contains leading_zeros pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(427)"
      ]
    },
    "cell_10": {
      "index": 10,
      "title": "Testing individual components and troubleshooting - FIXED VERSION",
      "status": "unknown",
      "imports": [
        "from collections import Counter"
      ],
      "defines": {
        "functions": [
          "test_pdf_extraction_single",
          "test_pdf_deduplication",
          "test_tds_masters_reading",
          "test_date_extraction",
          "create_test_summary"
        ],
        "classes": []
      },
      "calls": [
        "join",
        "to_datetime",
        "test_date_extraction",
        "float",
        "read_tds_masters",
        "enumerate",
        "replace",
        "most_common",
        "sorted",
        "append",
        "extract_challan_data_from_pdf",
        "test_pdf_deduplication",
        "get_output_filename_from_masters",
        "head",
        "extract_all_challans",
        "create_test_summary",
        "ceil",
        "str",
        "abs",
        "iterrows",
        "print",
        "lower",
        "listdir",
        "endswith",
        "get",
        "test_tds_masters_reading",
        "Counter",
        "dropna",
        "test_pdf_extraction_single",
        "notna",
        "items",
        "strip"
      ],
      "dependencies": {
        "backward": [
          "cell_3",
          "cell_2",
          "cell_8"
        ],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains leading_zeros pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(421)",
        "(427)"
      ]
    },
    "cell_11": {
      "index": 11,
      "title": "Main Execution Cell - Simple Interface",
      "status": "unknown",
      "imports": [],
      "defines": {
        "functions": [
          "quick_start"
        ],
        "classes": []
      },
      "calls": [
        "print",
        "exists",
        "quick_start",
        "start_interactive_upload",
        "len",
        "listdir",
        "endswith",
        "get"
      ],
      "dependencies": {
        "backward": [
          "cell_9"
        ],
        "forward": []
      },
      "issues": [],
      "mapping_related": false
    }
  },
  "dependency_graph": {
    "execution_order": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11
    ],
    "definitions": {
      "extract_challan_data_from_pdf": "cell_2",
      "extract_all_challans": "cell_2",
      "test_extraction": "cell_2",
      "read_tds_masters": "cell_3",
      "update_tds_masters_with_challans": "cell_3",
      "validate_tds_totals": "cell_3",
      "generate_tds_masters_template": "cell_4",
      "create_template_download_widget": "cell_4",
      "TDSMastersTemplateGenerator": "cell_4",
      "generate_output_file_enhanced": "cell_5",
      "test_template_generation": "cell_5",
      "GovernmentTemplateBuilder": "cell_5",
      "test_validation": "cell_6",
      "ValidationEngine": "cell_6",
      "test_reconciliation_report": "cell_7",
      "ReconciliationReport": "cell_7",
      "get_output_filename_from_masters": "cell_8",
      "fill_government_template": "cell_8",
      "_fill_deductor_details": "cell_8",
      "_fill_challan_details": "cell_8",
      "_fill_deductee_breakup": "cell_8",
      "process_tds_returns_enhanced": "cell_8",
      "process_tds_returns": "cell_8",
      "clear_uploads": "cell_9",
      "upload_zip_file": "cell_9",
      "process_uploaded_files": "cell_9",
      "start_interactive_upload": "cell_9",
      "download_tds_masters_template": "cell_9",
      "test_pdf_extraction_single": "cell_10",
      "test_pdf_deduplication": "cell_10",
      "test_tds_masters_reading": "cell_10",
      "test_date_extraction": "cell_10",
      "create_test_summary": "cell_10",
      "quick_start": "cell_11"
    },
    "forward_dependencies": 1
  },
  "mapping_pipeline": {
    "pdf_extraction": {
      "functions": [
        {
          "cell": "cell_2",
          "functions": [
            "extract_challan_data_from_pdf",
            "extract_all_challans",
            "test_extraction"
          ]
        },
        {
          "cell": "cell_9",
          "functions": [
            "clear_uploads",
            "upload_zip_file",
            "process_uploaded_files",
            "start_interactive_upload",
            "download_tds_masters_template"
          ]
        },
        {
          "cell": "cell_10",
          "functions": [
            "test_pdf_extraction_single",
            "test_pdf_deduplication",
            "test_tds_masters_reading",
            "test_date_extraction",
            "create_test_summary"
          ]
        }
      ],
      "input_fields": [
        "bsr_code",
        "challan_no",
        "bsr_code",
        "challan_no",
        "bsr_code",
        "challan_no",
        "challan_no",
        "challan_no",
        "challan_no",
        "challan_no",
        "challan_no"
      ],
      "output_structure": {},
      "issues": []
    },
    "excel_processing": {
      "functions": [
        {
          "cell": "cell_1",
          "functions": []
        },
        {
          "cell": "cell_3",
          "functions": [
            "read_tds_masters",
            "update_tds_masters_with_challans",
            "validate_tds_totals"
          ]
        },
        {
          "cell": "cell_4",
          "functions": [
            "generate_tds_masters_template",
            "create_template_download_widget"
          ]
        },
        {
          "cell": "cell_5",
          "functions": [
            "generate_output_file_enhanced",
            "test_template_generation"
          ]
        },
        {
          "cell": "cell_6",
          "functions": [
            "test_validation"
          ]
        },
        {
          "cell": "cell_7",
          "functions": [
            "test_reconciliation_report"
          ]
        },
        {
          "cell": "cell_8",
          "functions": [
            "get_output_filename_from_masters",
            "fill_government_template",
            "_fill_deductor_details",
            "_fill_challan_details",
            "_fill_deductee_breakup",
            "process_tds_returns_enhanced",
            "process_tds_returns"
          ]
        },
        {
          "cell": "cell_9",
          "functions": [
            "clear_uploads",
            "upload_zip_file",
            "process_uploaded_files",
            "start_interactive_upload",
            "download_tds_masters_template"
          ]
        },
        {
          "cell": "cell_10",
          "functions": [
            "test_pdf_extraction_single",
            "test_pdf_deduplication",
            "test_tds_masters_reading",
            "test_date_extraction",
            "create_test_summary"
          ]
        },
        {
          "cell": "cell_11",
          "functions": [
            "quick_start"
          ]
        }
      ],
      "column_mappings": {
        "(415)": "Deductee Code",
        "(415A)": "Section/Nature of Payment",
        "(416)": "PAN",
        "(417)": "Name",
        "(418)": "Date of Payment",
        "(419)": "Amount Paid",
        "(420)": "Paid by Book Entry",
        "(421)": "TDS Amount",
        "(425D)": "BSR Code",
        "(425E)": "Challan Serial No",
        "(425F)": "Date Deposited",
        "(427)": "Rate"
      },
      "transformations": [
        "Amount rounding up",
        "Date formatting",
        "Date formatting",
        "Amount rounding up",
        "Date formatting",
        "Amount rounding up",
        "Date formatting",
        "Date formatting",
        "Amount rounding up",
        "Date formatting",
        "Date formatting"
      ],
      "issues": []
    },
    "validation": {
      "mandatory_fields": 20,
      "validation_functions": [
        {
          "cell": "cell_3",
          "functions": [
            "read_tds_masters",
            "update_tds_masters_with_challans",
            "validate_tds_totals"
          ]
        },
        {
          "cell": "cell_6",
          "functions": [
            "test_validation"
          ]
        },
        {
          "cell": "cell_7",
          "functions": [
            "test_reconciliation_report"
          ]
        },
        {
          "cell": "cell_8",
          "functions": [
            "get_output_filename_from_masters",
            "fill_government_template",
            "_fill_deductor_details",
            "_fill_challan_details",
            "_fill_deductee_breakup",
            "process_tds_returns_enhanced",
            "process_tds_returns"
          ]
        }
      ],
      "issues": []
    }
  },
  "issues": {
    "critical": [],
    "warnings": [
      "Cell 5: Forward dependency on _fill_deductor_details defined in Cell 8",
      "Cell 5: Forward dependency on _fill_deductee_breakup defined in Cell 8",
      "Cell 5: Forward dependency on _fill_challan_details defined in Cell 8",
      "Undefined function called: to_datetime",
      "Undefined function called: create_template",
      "Undefined function called: filterwarnings",
      "Undefined function called: append",
      "Undefined function called: title",
      "Undefined function called: if",
      "Undefined function called: head",
      "Undefined function called: print_exc",
      "Undefined function called: strftime",
      "Undefined function called: DataValidation",
      "Undefined function called: walk",
      "Undefined function called: Layout",
      "Undefined function called: now",
      "Undefined function called: date",
      "Undefined function called: generate_report",
      "Undefined function called: group",
      "Undefined function called: save",
      "Undefined function called: Alignment",
      "Undefined function called: DataFrame",
      "Undefined function called: list",
      "Undefined function called: keys",
      "Undefined function called: to_string",
      "Undefined function called: apply",
      "Undefined function called: astype",
      "Undefined function called: enumerate",
      "Undefined function called: sorted",
      "Undefined function called: set",
      "Undefined function called: most_common",
      "Undefined function called: Button",
      "Undefined function called: VBox",
      "Undefined function called: Font",
      "Undefined function called: iterrows",
      "Undefined function called: save_template",
      "Undefined function called: remove",
      "Undefined function called: export_validation_report",
      "Undefined function called: Side",
      "Undefined function called: Counter",
      "Undefined function called: to_excel",
      "Undefined function called: notna",
      "Undefined function called: download_template",
      "Undefined function called: PdfReader",
      "Undefined function called: else",
      "Undefined function called: Border",
      "Undefined function called: to_numeric",
      "Undefined function called: join",
      "Undefined function called: min",
      "Undefined function called: replace",
      "Undefined function called: validate_all",
      "Undefined function called: any",
      "Undefined function called: read_excel",
      "Undefined function called: Decimal",
      "Undefined function called: merge_cells",
      "Undefined function called: get_validation_dataframe",
      "Undefined function called: iter_rows",
      "Undefined function called: Workbook",
      "Undefined function called: load_workbook",
      "Undefined function called: Comment",
      "Undefined function called: dirname",
      "Undefined function called: on_click",
      "Undefined function called: sum",
      "Undefined function called: lower",
      "Undefined function called: extract_text",
      "Undefined function called: listdir",
      "Undefined function called: zfill",
      "Undefined function called: exists",
      "Undefined function called: items",
      "Undefined function called: strptime",
      "Undefined function called: ZipFile",
      "Undefined function called: download",
      "Undefined function called: write",
      "Undefined function called: strip",
      "Undefined function called: basename",
      "Undefined function called: search",
      "Undefined function called: cell",
      "Undefined function called: add",
      "Undefined function called: rmtree",
      "Undefined function called: format",
      "Undefined function called: get_column_letter",
      "Undefined function called: PatternFill",
      "Undefined function called: move",
      "Undefined function called: to_pydatetime",
      "Undefined function called: ceil",
      "Undefined function called: makedirs",
      "Undefined function called: abs",
      "Undefined function called: validator",
      "Undefined function called: startswith",
      "Undefined function called: fill_template",
      "Undefined function called: HTML",
      "Undefined function called: upload",
      "Undefined function called: ExcelWriter",
      "Undefined function called: details",
      "Undefined function called: values",
      "Undefined function called: endswith",
      "Undefined function called: get",
      "Undefined function called: match",
      "Undefined function called: extractall",
      "Undefined function called: quantize",
      "Undefined function called: dropna",
      "Undefined function called: upper",
      "Undefined function called: create_sheet",
      "Undefined function called: add_data_validation",
      "Undefined function called: close"
    ],
    "mapping_issues": [],
    "fixed": []
  },
  "pdf_excel_flow": {},
  "test_coverage": {
    "test_functions": [
      "test_extraction",
      "test_template_generation",
      "test_validation",
      "test_reconciliation_report",
      "test_pdf_extraction_single",
      "test_pdf_deduplication",
      "test_tds_masters_reading",
      "test_date_extraction"
    ],
    "coverage_count": 8,
    "has_pdf_tests": true,
    "has_excel_tests": true,
    "has_validation_tests": true
  }
}