{
  "metadata": {
    "total_cells": 13,
    "notebook_path": "TDS_Automation_V2.ipynb",
    "last_scan": "2025-08-14T11:24:50.549626",
    "version": "3.0",
    "repository": "rjshvjy/tds-automation",
    "type": "widget_based",
    "flow_type": "branching",
    "commit_hash": "33c08e5625e0af252d78c2afa5810219ec23761e"
  },
  "cells": {
    "cell_1": {
      "index": 1,
      "title": "Install required libraries and import modules",
      "status": "unknown",
      "imports": [
        "import PyPDF2",
        "import pandas as pd",
        "import numpy as np",
        "import re",
        "import os",
        "from datetime import datetime",
        "import openpyxl",
        "from openpyxl import load_workbook",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.styles import Font, Alignment, Border, Side",
        "import warnings"
      ],
      "defines": {
        "functions": [],
        "classes": []
      },
      "calls": [
        "filterwarnings",
        "print"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [],
      "mapping_related": false
    },
    "cell_2": {
      "index": 2,
      "title": "Functions to extract data from PDF challans - FIXED AMOUNT EXTRACTION",
      "status": "unknown",
      "imports": [],
      "defines": {
        "functions": [
          "extract_challan_data_from_pdf",
          "extract_all_challans",
          "test_extraction"
        ],
        "classes": []
      },
      "calls": [
        "items",
        "strip",
        "basename",
        "join",
        "open",
        "lower",
        "search",
        "PdfReader",
        "extract_challan_data_from_pdf",
        "endswith",
        "test_extraction",
        "float",
        "sorted",
        "zfill",
        "print",
        "group",
        "upper",
        "listdir",
        "extract_all_challans",
        "len",
        "extract_text",
        "replace",
        "get",
        "append",
        "str"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains leading_zeros pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true
    },
    "cell_3": {
      "index": 3,
      "title": "Functions to read and update Excel files - FIXED WITH PROPER COLUMN CODES AND TDS PRESERVATION",
      "status": "unknown",
      "imports": [
        "import math",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import traceback",
        "import traceback",
        "import traceback"
      ],
      "defines": {
        "functions": [
          "read_tds_masters",
          "update_tds_masters_with_challans",
          "validate_tds_totals"
        ],
        "classes": []
      },
      "calls": [
        "notna",
        "print_exc",
        "items",
        "strip",
        "update_tds_masters_with_challans",
        "int",
        "cell",
        "to_datetime",
        "iter_rows",
        "lower",
        "search",
        "enumerate",
        "Decimal",
        "astype",
        "abs",
        "save",
        "keys",
        "startswith",
        "match",
        "sorted",
        "print",
        "DataFrame",
        "group",
        "strptime",
        "quantize",
        "iterrows",
        "set",
        "any",
        "read_excel",
        "list",
        "range",
        "read_tds_masters",
        "apply",
        "close",
        "len",
        "replace",
        "to_numeric",
        "min",
        "get",
        "append",
        "load_workbook",
        "validate_tds_totals",
        "str"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(421)",
        "(425D)",
        "(425E)",
        "(425F)",
        "(427)"
      ]
    },
    "cell_4": {
      "index": 4,
      "title": "TDS_Masters Template Generator",
      "status": "unknown",
      "imports": [
        "import openpyxl",
        "from openpyxl import Workbook",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.worksheet.datavalidation import DataValidation",
        "import pandas as pd",
        "from datetime import datetime",
        "import ipywidgets as widgets",
        "from IPython.display import display",
        "from google.colab import files"
      ],
      "defines": {
        "functions": [
          "generate_tds_masters_template",
          "create_template_download_widget"
        ],
        "classes": [
          "TDSMastersTemplateGenerator"
        ]
      },
      "calls": [
        "__init__",
        "Layout",
        "_setup_tds_rates_sheet",
        "items",
        "cell",
        "DataValidation",
        "enumerate",
        "Comment",
        "Workbook",
        "save",
        "VBox",
        "PatternFill",
        "add",
        "date",
        "_setup_tds_parties_sheet",
        "merge_cells",
        "generate_tds_masters_template",
        "print",
        "Alignment",
        "_setup_challan_details_sheet",
        "Font",
        "add_data_validation",
        "Button",
        "download_template",
        "HTML",
        "TDSMastersTemplateGenerator",
        "create_template",
        "range",
        "download",
        "details",
        "_setup_tds_codes_sheet",
        "on_click",
        "get_column_letter",
        "_setup_deductor_input_sheet",
        "create_sheet",
        "create_template_download_widget",
        "now",
        "save_template"
      ],
      "dependencies": {
        "backward": [],
        "forward": [
          "cell_12"
        ]
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains leading_zeros pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern"
      ],
      "mapping_related": false,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(420)",
        "(421)",
        "(425D)",
        "(425E)",
        "(425F)",
        "(427)"
      ]
    },
    "cell_5": {
      "index": 5,
      "title": "Government Template Builder and Enhanced Output Generator",
      "status": "unknown",
      "imports": [
        "import openpyxl",
        "from openpyxl import Workbook",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill",
        "from openpyxl.utils import get_column_letter",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import pandas as pd",
        "from datetime import datetime",
        "import math"
      ],
      "defines": {
        "functions": [
          "generate_output_file_enhanced",
          "test_template_generation"
        ],
        "classes": [
          "GovernmentTemplateBuilder"
        ]
      },
      "calls": [
        "__init__",
        "notna",
        "generate_output_file_enhanced",
        "GovernmentTemplateBuilder",
        "_setup_deductee_sheet",
        "strip",
        "isinstance",
        "int",
        "test_template_generation",
        "cell",
        "to_datetime",
        "enumerate",
        "_fill_deductor_details",
        "Workbook",
        "save",
        "float",
        "_fill_deductee_breakup",
        "ceil",
        "print",
        "fill_template",
        "dropna",
        "strptime",
        "upper",
        "Alignment",
        "Font",
        "iterrows",
        "create_template",
        "_setup_deductor_sheet",
        "read_tds_masters",
        "_fill_challan_details",
        "extract_all_challans",
        "len",
        "if",
        "get_column_letter",
        "replace",
        "get",
        "create_sheet",
        "_setup_challan_sheet",
        "append",
        "str"
      ],
      "dependencies": {
        "backward": [
          "cell_3",
          "cell_2"
        ],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(420)",
        "(421)",
        "(425D)",
        "(425E)",
        "(425F)",
        "(427)"
      ]
    },
    "cell_6": {
      "index": 6,
      "title": "Enhanced Main Processing Pipeline",
      "status": "unknown",
      "imports": [
        "import os",
        "import math",
        "import pandas as pd",
        "import numpy as np",
        "from datetime import datetime",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import openpyxl",
        "from openpyxl import load_workbook, Workbook",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill",
        "from GovernmentTemplateBuilder import GovernmentTemplateBuilder",
        "from GovernmentTemplateBuilder import GovernmentTemplateBuilder"
      ],
      "defines": {
        "functions": [
          "get_output_filename_from_masters",
          "fill_government_template",
          "process_tds_returns_enhanced",
          "process_tds_returns"
        ],
        "classes": []
      },
      "calls": [
        "process_tds_returns",
        "validate_all",
        "GovernmentTemplateBuilder",
        "ImportError",
        "update_tds_masters_with_challans",
        "join",
        "to_datetime",
        "process_tds_returns_enhanced",
        "fill_government_template",
        "Workbook",
        "save",
        "ValidationEngine",
        "get_output_filename_from_masters",
        "ReconciliationReport",
        "generate_report",
        "remove",
        "fill_template",
        "print",
        "dropna",
        "create_template",
        "dirname",
        "read_tds_masters",
        "extract_all_challans",
        "len",
        "get",
        "create_sheet",
        "strftime",
        "validate_tds_totals",
        "now",
        "object"
      ],
      "dependencies": {
        "backward": [
          "cell_3",
          "cell_2",
          "cell_5"
        ],
        "forward": [
          "cell_7",
          "cell_9",
          "cell_8"
        ]
      },
      "issues": [
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(418)"
      ]
    },
    "cell_7": {
      "index": 7,
      "title": "Validation Engine with Reconciliation Report Support",
      "status": "unknown",
      "imports": [
        "import re",
        "import pandas as pd",
        "import openpyxl",
        "from openpyxl import load_workbook",
        "from datetime import datetime",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import numpy as np"
      ],
      "defines": {
        "functions": [
          "test_validation"
        ],
        "classes": [
          "ValidationEngine"
        ]
      },
      "calls": [
        "_validate_pincode",
        "__init__",
        "validate_all",
        "notna",
        "_validate_mandatory_fields",
        "items",
        "strip",
        "_validate_quarter",
        "enumerate",
        "Decimal",
        "abs",
        "keys",
        "ValidationEngine",
        "sum",
        "values",
        "match",
        "_validate_yes_no",
        "float",
        "to_string",
        "_generate_suggestions",
        "validator",
        "sorted",
        "_load_deductor_details",
        "print",
        "_validate_deductor_type",
        "get_validation_dataframe",
        "ExcelWriter",
        "DataFrame",
        "upper",
        "quantize",
        "test_validation",
        "iterrows",
        "_validate_tan",
        "set",
        "export_validation_report",
        "list",
        "_validate_formats",
        "_generate_summary",
        "_validate_email",
        "title",
        "to_excel",
        "len",
        "replace",
        "get",
        "_reconcile_amounts",
        "strftime",
        "append",
        "load_workbook",
        "now",
        "str",
        "_validate_pan"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415A)",
        "(416)",
        "(417)",
        "(421)"
      ]
    },
    "cell_8": {
      "index": 8,
      "title": "Reconciliation Report Generator",
      "status": "unknown",
      "imports": [
        "import pandas as pd",
        "import openpyxl",
        "from openpyxl import Workbook",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.formatting.rule import CellIsRule",
        "from openpyxl.styles.differential import DifferentialStyle",
        "from datetime import datetime",
        "import numpy as np"
      ],
      "defines": {
        "functions": [
          "test_reconciliation_report"
        ],
        "classes": [
          "ReconciliationReport"
        ]
      },
      "calls": [
        "__init__",
        "else",
        "_print_report_summary",
        "items",
        "cell",
        "enumerate",
        "abs",
        "Workbook",
        "save",
        "Border",
        "sum",
        "PatternFill",
        "values",
        "ReconciliationReport",
        "generate_report",
        "_get_format_suggestion",
        "merge_cells",
        "_create_mandatory_fields_sheet",
        "remove",
        "print",
        "Alignment",
        "Font",
        "Side",
        "range",
        "test_reconciliation_report",
        "_create_validation_errors_sheet",
        "_create_summary_sheet",
        "title",
        "len",
        "_create_challan_matching_sheet",
        "get",
        "create_sheet",
        "strftime",
        "_create_data_corrections_sheet",
        "append",
        "now"
      ],
      "dependencies": {
        "backward": [],
        "forward": []
      },
      "issues": [
        "Contains date_format pattern",
        "Contains rate_conversion pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(416)",
        "(417)"
      ]
    },
    "cell_9": {
      "index": 9,
      "title": "Enhanced Main Processing Pipeline",
      "status": "unknown",
      "imports": [
        "import os",
        "import math",
        "import pandas as pd",
        "import numpy as np",
        "from datetime import datetime",
        "from decimal import Decimal, ROUND_HALF_UP",
        "import openpyxl",
        "from openpyxl import load_workbook, Workbook",
        "from openpyxl.utils import get_column_letter",
        "from openpyxl.styles import Font, Alignment, Border, Side, PatternFill",
        "from GovernmentTemplateBuilder import GovernmentTemplateBuilder",
        "from GovernmentTemplateBuilder import GovernmentTemplateBuilder"
      ],
      "defines": {
        "functions": [
          "get_output_filename_from_masters",
          "fill_government_template",
          "process_tds_returns_enhanced",
          "process_tds_returns"
        ],
        "classes": []
      },
      "calls": [
        "process_tds_returns",
        "validate_all",
        "GovernmentTemplateBuilder",
        "ImportError",
        "update_tds_masters_with_challans",
        "join",
        "to_datetime",
        "process_tds_returns_enhanced",
        "fill_government_template",
        "Workbook",
        "save",
        "ValidationEngine",
        "get_output_filename_from_masters",
        "ReconciliationReport",
        "generate_report",
        "remove",
        "fill_template",
        "print",
        "dropna",
        "create_template",
        "dirname",
        "read_tds_masters",
        "extract_all_challans",
        "len",
        "get",
        "create_sheet",
        "strftime",
        "validate_tds_totals",
        "now",
        "object"
      ],
      "dependencies": {
        "backward": [
          "cell_3",
          "cell_5",
          "cell_7",
          "cell_2",
          "cell_8"
        ],
        "forward": []
      },
      "issues": [
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(418)"
      ]
    },
    "cell_10": {
      "index": 10,
      "title": "Modified Interactive Interface - 2-File Upload System",
      "status": "unknown",
      "imports": [
        "import os",
        "import zipfile",
        "import shutil",
        "from google.colab import files",
        "import pandas as pd",
        "from datetime import datetime",
        "import time",
        "import traceback"
      ],
      "defines": {
        "functions": [
          "clear_uploads",
          "upload_zip_file",
          "process_uploaded_files",
          "start_interactive_upload",
          "download_tds_masters_template"
        ],
        "classes": []
      },
      "calls": [
        "write",
        "print_exc",
        "items",
        "basename",
        "join",
        "process_tds_returns_enhanced",
        "open",
        "walk",
        "lower",
        "endswith",
        "extract_challan_data_from_pdf",
        "save",
        "startswith",
        "upload_zip_file",
        "start_interactive_upload",
        "upload",
        "print",
        "ZipFile",
        "remove",
        "clear_uploads",
        "move",
        "extractall",
        "TDSMastersTemplateGenerator",
        "exists",
        "rmtree",
        "download_tds_masters_template",
        "create_template",
        "makedirs",
        "format",
        "download",
        "len",
        "process_uploaded_files",
        "get",
        "append"
      ],
      "dependencies": {
        "backward": [
          "cell_4",
          "cell_2",
          "cell_9"
        ],
        "forward": []
      },
      "issues": [
        "Contains leading_zeros pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(427)"
      ]
    },
    "cell_11": {
      "index": 11,
      "title": "Testing individual components and troubleshooting - FIXED VERSION",
      "status": "unknown",
      "imports": [
        "from collections import Counter"
      ],
      "defines": {
        "functions": [
          "test_pdf_extraction_single",
          "test_pdf_deduplication",
          "test_tds_masters_reading",
          "test_date_extraction",
          "create_test_summary"
        ],
        "classes": []
      },
      "calls": [
        "notna",
        "items",
        "strip",
        "join",
        "to_datetime",
        "lower",
        "enumerate",
        "extract_challan_data_from_pdf",
        "endswith",
        "create_test_summary",
        "abs",
        "get_output_filename_from_masters",
        "test_tds_masters_reading",
        "float",
        "sorted",
        "ceil",
        "print",
        "dropna",
        "test_date_extraction",
        "iterrows",
        "listdir",
        "test_pdf_deduplication",
        "most_common",
        "read_tds_masters",
        "extract_all_challans",
        "head",
        "replace",
        "get",
        "append",
        "Counter",
        "str",
        "test_pdf_extraction_single"
      ],
      "dependencies": {
        "backward": [
          "cell_3",
          "cell_2",
          "cell_9"
        ],
        "forward": []
      },
      "issues": [
        "Contains nan_values pattern",
        "Contains leading_zeros pattern",
        "Contains date_format pattern",
        "Contains rate_conversion pattern",
        "Contains round_up pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true,
      "column_references": [
        "(415)",
        "(415A)",
        "(416)",
        "(417)",
        "(418)",
        "(419)",
        "(421)",
        "(427)"
      ]
    },
    "cell_12": {
      "index": 12,
      "title": "Simple Interactive Interface with Template Choice",
      "status": "unknown",
      "imports": [
        "import os",
        "import ipywidgets as widgets",
        "from IPython.display import display, clear_output, HTML",
        "from google.colab import files",
        "import time"
      ],
      "defines": {
        "functions": [
          "show_template_choice",
          "download_template",
          "quick_upload"
        ],
        "classes": []
      },
      "calls": [
        "display",
        "Layout",
        "write",
        "items",
        "join",
        "Output",
        "process_tds_returns_enhanced",
        "open",
        "endswith",
        "quick_upload",
        "upload_files",
        "generate_tds_masters_template",
        "upload",
        "print",
        "Button",
        "download_template",
        "HTML",
        "makedirs",
        "download",
        "globals",
        "HBox",
        "show_template_choice",
        "on_click",
        "clear_output",
        "append"
      ],
      "dependencies": {
        "backward": [
          "cell_4",
          "cell_9"
        ],
        "forward": []
      },
      "issues": [
        "Contains leading_zeros pattern",
        "Contains string_preserve pattern"
      ],
      "mapping_related": true
    }
  },
  "dependency_graph": {
    "execution_order": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12
    ],
    "definitions": {
      "extract_challan_data_from_pdf": "cell_2",
      "extract_all_challans": "cell_2",
      "test_extraction": "cell_2",
      "read_tds_masters": "cell_3",
      "update_tds_masters_with_challans": "cell_3",
      "validate_tds_totals": "cell_3",
      "generate_tds_masters_template": "cell_4",
      "create_template_download_widget": "cell_4",
      "TDSMastersTemplateGenerator": "cell_4",
      "generate_output_file_enhanced": "cell_5",
      "test_template_generation": "cell_5",
      "GovernmentTemplateBuilder": "cell_5",
      "get_output_filename_from_masters": "cell_9",
      "fill_government_template": "cell_9",
      "process_tds_returns_enhanced": "cell_9",
      "process_tds_returns": "cell_9",
      "test_validation": "cell_7",
      "ValidationEngine": "cell_7",
      "test_reconciliation_report": "cell_8",
      "ReconciliationReport": "cell_8",
      "clear_uploads": "cell_10",
      "upload_zip_file": "cell_10",
      "process_uploaded_files": "cell_10",
      "start_interactive_upload": "cell_10",
      "download_tds_masters_template": "cell_10",
      "test_pdf_extraction_single": "cell_11",
      "test_pdf_deduplication": "cell_11",
      "test_tds_masters_reading": "cell_11",
      "test_date_extraction": "cell_11",
      "create_test_summary": "cell_11",
      "show_template_choice": "cell_12",
      "download_template": "cell_12",
      "quick_upload": "cell_12"
    },
    "forward_dependencies": 2
  },
  "mapping_pipeline": {
    "pdf_extraction": {
      "functions": [
        {
          "cell": "cell_2",
          "functions": [
            "extract_challan_data_from_pdf",
            "extract_all_challans",
            "test_extraction"
          ]
        },
        {
          "cell": "cell_10",
          "functions": [
            "clear_uploads",
            "upload_zip_file",
            "process_uploaded_files",
            "start_interactive_upload",
            "download_tds_masters_template"
          ]
        },
        {
          "cell": "cell_11",
          "functions": [
            "test_pdf_extraction_single",
            "test_pdf_deduplication",
            "test_tds_masters_reading",
            "test_date_extraction",
            "create_test_summary"
          ]
        }
      ],
      "input_fields": [
        "bsr_code",
        "challan_no",
        "bsr_code",
        "challan_no",
        "bsr_code",
        "challan_no",
        "challan_no",
        "challan_no",
        "challan_no",
        "challan_no",
        "challan_no"
      ],
      "output_structure": {},
      "issues": []
    },
    "excel_processing": {
      "functions": [
        {
          "cell": "cell_1",
          "functions": []
        },
        {
          "cell": "cell_3",
          "functions": [
            "read_tds_masters",
            "update_tds_masters_with_challans",
            "validate_tds_totals"
          ]
        },
        {
          "cell": "cell_4",
          "functions": [
            "generate_tds_masters_template",
            "create_template_download_widget"
          ]
        },
        {
          "cell": "cell_5",
          "functions": [
            "generate_output_file_enhanced",
            "test_template_generation"
          ]
        },
        {
          "cell": "cell_6",
          "functions": [
            "get_output_filename_from_masters",
            "fill_government_template",
            "process_tds_returns_enhanced",
            "process_tds_returns"
          ]
        },
        {
          "cell": "cell_7",
          "functions": [
            "test_validation"
          ]
        },
        {
          "cell": "cell_8",
          "functions": [
            "test_reconciliation_report"
          ]
        },
        {
          "cell": "cell_9",
          "functions": [
            "get_output_filename_from_masters",
            "fill_government_template",
            "process_tds_returns_enhanced",
            "process_tds_returns"
          ]
        },
        {
          "cell": "cell_10",
          "functions": [
            "clear_uploads",
            "upload_zip_file",
            "process_uploaded_files",
            "start_interactive_upload",
            "download_tds_masters_template"
          ]
        },
        {
          "cell": "cell_11",
          "functions": [
            "test_pdf_extraction_single",
            "test_pdf_deduplication",
            "test_tds_masters_reading",
            "test_date_extraction",
            "create_test_summary"
          ]
        },
        {
          "cell": "cell_12",
          "functions": [
            "show_template_choice",
            "download_template",
            "quick_upload"
          ]
        }
      ],
      "column_mappings": {
        "(415)": "Deductee Code",
        "(415A)": "Section/Nature of Payment",
        "(416)": "PAN",
        "(417)": "Name",
        "(418)": "Date of Payment",
        "(419)": "Amount Paid",
        "(420)": "Paid by Book Entry",
        "(421)": "TDS Amount",
        "(425D)": "BSR Code",
        "(425E)": "Challan Serial No",
        "(425F)": "Date Deposited",
        "(427)": "Rate"
      },
      "transformations": [
        "Amount rounding up",
        "Date formatting",
        "Date formatting",
        "Amount rounding up",
        "Date formatting",
        "Amount rounding up",
        "Date formatting",
        "Amount rounding up",
        "Date formatting",
        "Date formatting",
        "Amount rounding up",
        "Date formatting",
        "Date formatting"
      ],
      "issues": []
    },
    "validation": {
      "mandatory_fields": 20,
      "validation_functions": [
        {
          "cell": "cell_3",
          "functions": [
            "read_tds_masters",
            "update_tds_masters_with_challans",
            "validate_tds_totals"
          ]
        },
        {
          "cell": "cell_6",
          "functions": [
            "get_output_filename_from_masters",
            "fill_government_template",
            "process_tds_returns_enhanced",
            "process_tds_returns"
          ]
        },
        {
          "cell": "cell_7",
          "functions": [
            "test_validation"
          ]
        },
        {
          "cell": "cell_8",
          "functions": [
            "test_reconciliation_report"
          ]
        },
        {
          "cell": "cell_9",
          "functions": [
            "get_output_filename_from_masters",
            "fill_government_template",
            "process_tds_returns_enhanced",
            "process_tds_returns"
          ]
        }
      ],
      "issues": []
    }
  },
  "issues": {
    "critical": [],
    "warnings": [
      "Cell 4: Forward dependency on download_template defined in Cell 12",
      "Cell 6: Forward dependency on process_tds_returns defined in Cell 9",
      "Cell 6: Forward dependency on process_tds_returns_enhanced defined in Cell 9",
      "Cell 6: Forward dependency on fill_government_template defined in Cell 9",
      "Cell 6: Forward dependency on ValidationEngine defined in Cell 7",
      "Cell 6: Forward dependency on get_output_filename_from_masters defined in Cell 9",
      "Cell 6: Forward dependency on ReconciliationReport defined in Cell 8",
      "Undefined function called: Layout",
      "Undefined function called: else",
      "Undefined function called: to_datetime",
      "Undefined function called: enumerate",
      "Undefined function called: Decimal",
      "Undefined function called: Workbook",
      "Undefined function called: VBox",
      "Undefined function called: filterwarnings",
      "Undefined function called: PatternFill",
      "Undefined function called: generate_report",
      "Undefined function called: sorted",
      "Undefined function called: remove",
      "Undefined function called: dropna",
      "Undefined function called: move",
      "Undefined function called: list",
      "Undefined function called: create_template",
      "Undefined function called: Side",
      "Undefined function called: details",
      "Undefined function called: to_excel",
      "Undefined function called: min",
      "Undefined function called: get",
      "Undefined function called: DataValidation",
      "Undefined function called: walk",
      "Undefined function called: PdfReader",
      "Undefined function called: Comment",
      "Undefined function called: keys",
      "Undefined function called: Border",
      "Undefined function called: sum",
      "Undefined function called: date",
      "Undefined function called: values",
      "Undefined function called: merge_cells",
      "Undefined function called: zfill",
      "Undefined function called: upload_files",
      "Undefined function called: ceil",
      "Undefined function called: get_validation_dataframe",
      "Undefined function called: ExcelWriter",
      "Undefined function called: Font",
      "Undefined function called: HTML",
      "Undefined function called: any",
      "Undefined function called: read_excel",
      "Undefined function called: exists",
      "Undefined function called: download",
      "Undefined function called: dirname",
      "Undefined function called: title",
      "Undefined function called: head",
      "Undefined function called: replace",
      "Undefined function called: get_column_letter",
      "Undefined function called: to_numeric",
      "Undefined function called: save_template",
      "Undefined function called: object",
      "Undefined function called: items",
      "Undefined function called: strip",
      "Undefined function called: basename",
      "Undefined function called: join",
      "Undefined function called: ImportError",
      "Undefined function called: lower",
      "Undefined function called: astype",
      "Undefined function called: abs",
      "Undefined function called: startswith",
      "Undefined function called: add",
      "Undefined function called: match",
      "Undefined function called: to_string",
      "Undefined function called: DataFrame",
      "Undefined function called: group",
      "Undefined function called: add_data_validation",
      "Undefined function called: Button",
      "Undefined function called: export_validation_report",
      "Undefined function called: listdir",
      "Undefined function called: rmtree",
      "Undefined function called: makedirs",
      "Undefined function called: format",
      "Undefined function called: HBox",
      "Undefined function called: apply",
      "Undefined function called: close",
      "Undefined function called: on_click",
      "Undefined function called: extract_text",
      "Undefined function called: create_sheet",
      "Undefined function called: strftime",
      "Undefined function called: load_workbook",
      "Undefined function called: now",
      "Undefined function called: validate_all",
      "Undefined function called: write",
      "Undefined function called: notna",
      "Undefined function called: display",
      "Undefined function called: print_exc",
      "Undefined function called: cell",
      "Undefined function called: Output",
      "Undefined function called: iter_rows",
      "Undefined function called: search",
      "Undefined function called: endswith",
      "Undefined function called: save",
      "Undefined function called: validator",
      "Undefined function called: upload",
      "Undefined function called: fill_template",
      "Undefined function called: ZipFile",
      "Undefined function called: strptime",
      "Undefined function called: upper",
      "Undefined function called: quantize",
      "Undefined function called: Alignment",
      "Undefined function called: extractall",
      "Undefined function called: iterrows",
      "Undefined function called: set",
      "Undefined function called: globals",
      "Undefined function called: most_common",
      "Undefined function called: clear_output",
      "Undefined function called: if",
      "Undefined function called: append",
      "Undefined function called: Counter",
      "Multiple widget cells found (2), may cause state conflicts"
    ],
    "mapping_issues": [],
    "fixed": []
  },
  "pdf_excel_flow": {},
  "test_coverage": {
    "test_functions": [
      "test_extraction",
      "test_template_generation",
      "test_validation",
      "test_reconciliation_report",
      "test_pdf_extraction_single",
      "test_pdf_deduplication",
      "test_tds_masters_reading",
      "test_date_extraction"
    ],
    "coverage_count": 8,
    "has_pdf_tests": true,
    "has_excel_tests": true,
    "has_validation_tests": true
  }
}